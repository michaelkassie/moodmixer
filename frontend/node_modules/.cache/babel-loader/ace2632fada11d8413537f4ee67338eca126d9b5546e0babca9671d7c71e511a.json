{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/moodmixer/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mood, setMood] = useState('');\n  const [songs, setSongs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [history, setHistory] = useState([]);\n  const [view, setView] = useState('main'); // 'main' or 'history'\n\n  const presetMoods = ['Happy', 'Sad', 'Angry', 'Relaxed', 'Tired', 'Focused'];\n  const fetchSongs = async moodToSearch => {\n    if (!moodToSearch) return;\n    setLoading(true);\n    setError('');\n    setSongs([]);\n    setView('main');\n    try {\n      const res = await axios.get(`http://localhost:5000/music/${moodToSearch.toLowerCase()}`);\n      setSongs(res.data);\n    } catch (err) {\n      setError('Failed to load songs. Is the backend running?');\n      console.error(err);\n    }\n    setLoading(false);\n  };\n  const fetchHistory = async () => {\n    setLoading(true);\n    setError('');\n    setSongs([]);\n    setView('history');\n    try {\n      const res = await axios.get('http://localhost:5000/music/history/all');\n      setHistory(res.data);\n    } catch (err) {\n      setError('Failed to load mood history');\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MoodMixer \\uD83C\\uDFA7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preset-moods\",\n      children: presetMoods.map(preset => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => fetchSongs(preset),\n        children: preset\n      }, preset, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"manual-mood\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Or type a mood (e.g. chill)\",\n        value: mood,\n        onChange: e => setMood(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => fetchSongs(mood),\n        children: \"Get Music\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchHistory,\n        children: \"View Mood History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this), view === 'main' && songs.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"song-list\",\n      children: songs.map((song, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: song.url,\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: [song.name, \" \\u2014 \", song.artist]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), view === 'history' && history.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"history-view\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Past Mood Searches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), history.map((entry, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"history-entry\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [entry.mood, \" \\u2014 \", new Date(entry.date).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: entry.songs.map((song, j) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: song.url,\n              target: \"_blank\",\n              rel: \"noreferrer\",\n              children: [song.name, \" \\u2014 \", song.artist]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 21\n            }, this)\n          }, j, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ME1ikceRn2y/3d64pFntQtDjDVU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","mood","setMood","songs","setSongs","loading","setLoading","error","setError","history","setHistory","view","setView","presetMoods","fetchSongs","moodToSearch","res","get","toLowerCase","data","err","console","fetchHistory","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","preset","onClick","type","placeholder","value","onChange","e","target","length","song","index","href","url","rel","name","artist","entry","i","Date","date","toLocaleString","j","_c","$RefreshReg$"],"sources":["/Users/admin/Desktop/moodmixer/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  const [mood, setMood] = useState('');\n  const [songs, setSongs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [history, setHistory] = useState([]);\n  const [view, setView] = useState('main'); // 'main' or 'history'\n\n  const presetMoods = ['Happy', 'Sad', 'Angry', 'Relaxed', 'Tired', 'Focused'];\n\n  const fetchSongs = async (moodToSearch) => {\n    if (!moodToSearch) return;\n    setLoading(true);\n    setError('');\n    setSongs([]);\n    setView('main');\n    try {\n      const res = await axios.get(`http://localhost:5000/music/${moodToSearch.toLowerCase()}`);\n      setSongs(res.data);\n    } catch (err) {\n      setError('Failed to load songs. Is the backend running?');\n      console.error(err);\n    }\n    setLoading(false);\n  };\n\n  const fetchHistory = async () => {\n    setLoading(true);\n    setError('');\n    setSongs([]);\n    setView('history');\n    try {\n      const res = await axios.get('http://localhost:5000/music/history/all');\n      setHistory(res.data);\n    } catch (err) {\n      setError('Failed to load mood history');\n    }\n    setLoading(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>MoodMixer ðŸŽ§</h1>\n\n      <div className=\"preset-moods\">\n        {presetMoods.map((preset) => (\n          <button key={preset} onClick={() => fetchSongs(preset)}>\n            {preset}\n          </button>\n        ))}\n      </div>\n\n      <div className=\"manual-mood\">\n        <input\n          type=\"text\"\n          placeholder=\"Or type a mood (e.g. chill)\"\n          value={mood}\n          onChange={(e) => setMood(e.target.value)}\n        />\n        <button onClick={() => fetchSongs(mood)}>Get Music</button>\n        <button onClick={fetchHistory}>View Mood History</button>\n      </div>\n\n      {loading && <p>Loading...</p>}\n      {error && <p className=\"error\">{error}</p>}\n\n      {view === 'main' && songs.length > 0 && (\n        <ul className=\"song-list\">\n          {songs.map((song, index) => (\n            <li key={index}>\n              <a href={song.url} target=\"_blank\" rel=\"noreferrer\">\n                {song.name} â€” {song.artist}\n              </a>\n            </li>\n          ))}\n        </ul>\n      )}\n\n      {view === 'history' && history.length > 0 && (\n        <div className=\"history-view\">\n          <h2>Past Mood Searches</h2>\n          {history.map((entry, i) => (\n            <div key={i} className=\"history-entry\">\n              <h3>{entry.mood} â€” {new Date(entry.date).toLocaleString()}</h3>\n              <ul>\n                {entry.songs.map((song, j) => (\n                  <li key={j}>\n                    <a href={song.url} target=\"_blank\" rel=\"noreferrer\">\n                      {song.name} â€” {song.artist}\n                    </a>\n                  </li>\n                ))}\n              </ul>\n              <hr />\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}