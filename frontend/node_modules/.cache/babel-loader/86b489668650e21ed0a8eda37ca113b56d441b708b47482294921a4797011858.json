{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/moodmixer/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // state variables\n  const [mood, setMood] = useState('');\n  const [songs, setSongs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // reusable fetch-songs function\n  const fetchSongs = async moodToSearch => {\n    const query = (moodToSearch || '').trim().toLowerCase();\n    if (!query) return;\n    setLoading(true);\n    setError('');\n    try {\n      const res = await axios.get(`http://localhost:5000/music/${query}`);\n      setSongs(res.data);\n    } catch (err) {\n      console.error(err.message);\n      setError('Failed to load songs. Is the backend running?');\n      setSongs([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // list of quick-select moods\n  const presetMoods = ['Happy', 'Sad', 'Angry', 'Relaxed', 'Tired', 'Focused'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MoodMixer \\uD83C\\uDFA7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preset-moods\",\n      children: presetMoods.map(preset => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setMood(preset.toLowerCase());\n          fetchSongs(preset.toLowerCase());\n        },\n        children: preset\n      }, preset, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Or type a mood (e.g. happy, chill)\",\n      value: mood,\n      onChange: e => setMood(e.target.value),\n      onKeyDown: e => {\n        if (e.key === 'Enter') fetchSongs(mood);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => fetchSongs(mood),\n      children: \"Get Music\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this), songs.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"song-list\",\n      children: songs.map((song, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: song.url,\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: [song.name, \" \\u2014 \", song.artist]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"JdO4lIA2Jvx/6RIAhl/E1D2aPJ0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","mood","setMood","songs","setSongs","loading","setLoading","error","setError","fetchSongs","moodToSearch","query","trim","toLowerCase","res","get","data","err","console","message","presetMoods","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","preset","onClick","type","placeholder","value","onChange","e","target","onKeyDown","key","length","song","idx","href","url","rel","name","artist","_c","$RefreshReg$"],"sources":["/Users/admin/Desktop/moodmixer/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  // state variables\n  const [mood, setMood] = useState('');\n  const [songs, setSongs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // reusable fetch-songs function\n  const fetchSongs = async (moodToSearch) => {\n    const query = (moodToSearch || '').trim().toLowerCase();\n    if (!query) return;\n\n    setLoading(true);\n    setError('');\n    try {\n      const res = await axios.get(`http://localhost:5000/music/${query}`);\n      setSongs(res.data);\n    } catch (err) {\n      console.error(err.message);\n      setError('Failed to load songs. Is the backend running?');\n      setSongs([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // list of quick-select moods\n  const presetMoods = ['Happy', 'Sad', 'Angry', 'Relaxed', 'Tired', 'Focused'];\n\n  return (\n    <div className=\"App\">\n      <h1>MoodMixer ðŸŽ§</h1>\n\n      {/* quick-select mood buttons */}\n      <div className=\"preset-moods\">\n        {presetMoods.map((preset) => (\n          <button\n            key={preset}\n            onClick={() => {\n              setMood(preset.toLowerCase());\n              fetchSongs(preset.toLowerCase());\n            }}\n          >\n            {preset}\n          </button>\n        ))}\n      </div>\n\n      {/* custom mood input */}\n      <input\n        type=\"text\"\n        placeholder=\"Or type a mood (e.g. happy, chill)\"\n        value={mood}\n        onChange={(e) => setMood(e.target.value)}\n        onKeyDown={(e) => {\n          if (e.key === 'Enter') fetchSongs(mood);\n        }}\n      />\n      <button onClick={() => fetchSongs(mood)}>Get Music</button>\n\n      {/* status & error messages */}\n      {loading && <p>Loading...</p>}\n      {error && <p className=\"error\">{error}</p>}\n\n      {/* song list */}\n      {songs.length > 0 && (\n        <ul className=\"song-list\">\n          {songs.map((song, idx) => (\n            <li key={idx}>\n              <a href={song.url} target=\"_blank\" rel=\"noreferrer\">\n                {song.name} â€” {song.artist}\n              </a>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}